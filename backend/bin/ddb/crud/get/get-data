#!/usr/bin/env node

// command: ./bin/ddb/seed-data prod

const { QueryCommand, DynamoDBClient } = require("@aws-sdk/client-dynamodb");

// Check if we are in production mode
if (process.argv.length === 3) {
    if ("prod" in process.argv[2]) {
        attrs = {};
    }
}

// Set the endpoint to the local dynamodb
let attrs = {
    endpoint: 'http://localhost:8000'
};
// Create a new client
const client = new DynamoDBClient(attrs);

// query data to get all the orders that have been delivered to a customer between 2020 and 2026
const query = {
    TableName: "xpressbuy",
    IndexName: "GSI-1",
    // KeyConditionExpression: "#pk = :pk and begins_with(#GSI1_sk, :prefix) and #GSI1_sk between :start_time and :end_time",
    KeyConditionExpression: "#pk = :pk and #GSI1_sk between :start_time and :end_time",
    ExpressionAttributeNames: {
        "#pk": "pk",
        "#GSI1_sk": "GSI1_sk"
    },
    ExpressionAttributeValues: {
        ":pk": { S: "CUSTOMER#Alex37" },
        // ":prefix": { S: "Delivered#" },
        ":start_time": { S: `Delivered#${new Date(2020, 0, 1).toISOString()}` },
        ":end_time": { S: `Delivered#${new Date(2026, 0, 1).toISOString()}` }
    }
};


// query data to get all the customer items for a customer
const query2 = {
    TableName: "xpressbuy",
    KeyConditionExpression: "#pk = :pk",
    ExpressionAttributeNames: {
        "#pk": "pk"
    },
    ExpressionAttributeValues: {
        ":pk": { S: "CUSTOMER#Alex37" }
    }
};


// query data to get all the product items for a product
const query3 = {
    TableName: "xpressbuy",
    KeyConditionExpression: "#pk = :pk",
    ExpressionAttributeNames: {
        "#pk": "pk"
    },
    ExpressionAttributeValues: {
        ":pk": { S: "PRODUCT#11bc1a2a-07d9-41d3-845c-5b715646e45b" }
    }
};


// Create a new item
async function get_data() {

    try {
        const command = new QueryCommand(query3);
        const response = await client.send(command);
        // console.log(response);
        console.log(JSON.stringify(response.Items, null, 2)); // Pretty print the items
        // console.log(response.Items[0].GSI1_sk.S);
    } catch (error) {
        console.error(error);
    }
}


get_data();