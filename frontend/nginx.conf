# Set the worker processes (number of workers)
worker_processes 1;


# The events block specifies settings related to Nginx's event processing mechanism, which handles connections and requests.
events {
    # sets the maximum number of simultaneous connections that each worker process can handle.
    worker_connections 1024;
}


# The http block contains configuration settings for HTTP connections.
http {
    # Set the MIME types - includes the MIME types file, which defines mappings between file extensions and MIME types.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
    # defines the format of the access logs. It includes various placeholders like $remote_addr for the client's IP address and $request for the requested URI.

    access_log  /var/log/nginx/access.log main;
    #  specifies the file where access logs should be written.

    error_log /var/log/nginx/error.log;
    # specifies the file where error logs should be written.


    # Set the server section
    server {
        listen 3000;
        # specifies the port on which Nginx should listen for incoming connections.

        # sets the root directory from which Nginx should serve files for this server.
        root /usr/share/nginx/html;

        # specifies the default file that Nginx should serve when a request is made to the root URL ("/").
        index index.html;

        # block defines how Nginx should handle requests for different URIs. 
        location / {
            # In this case, it uses the try_files directive to first attempt to serve the requested file directly, 
            # then try appending a "/" and trying again, then try appending ".html" and trying again, and finally 
            # falling back to serving the index.html file.
            try_files $uri $uri/ $uri.html /index.html;
        }

        # The error_page directives define custom error pages for specific HTTP error codes (404, 500, etc.)
        error_page  404 /404.html;
        # location = /404.html { ... } block defines the location of the custom 404 error page
        location = /404.html {
            internal;
        }
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            internal;
        }
    }
}